<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><script src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/measure.js"></script><script src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/ads.js" async="" type="text/javascript"></script><script src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/pastebin.js" async="" type="text/javascript"></script><script src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/count.json" async=""></script>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<title>	.intel_syntax noprefix  	.global _start    						//deklaracja "zmiennych" (stal - Pastebin.com</title>
		<link rel="shortcut icon" href="http://pastebin.com/favicon.ico">
<link href="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/text.css" rel="stylesheet" type="text/css">		<link href="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/main_master.css" rel="stylesheet" type="text/css">
				
		<script src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/analytics.js" async=""></script><script type="text/javascript" src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/jquery.js"></script>
		<script type="text/javascript" src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/main_v1.js"></script>
		<meta property="fb:app_id" content="231493360234820">
		<meta property="og:title" content="	.intel_syntax noprefix  	.global _start    						//deklaracja &quot;zmiennych&quot; (stal - Pastebin.com">
		<meta property="og:type" content="article">
	    <meta property="og:url" content="http://pastebin.com/MEpr1DWQ">
	    <meta property="og:image" content="http://pastebin.com/i/fb2.jpg">
	    <meta property="og:site_name" content="Pastebin">
		<meta name="google-site-verification" content="jkUAIOE8owUXu8UXIhRLB9oHJsWBfOgJbZzncqHoF4A">
		<link rel="canonical" href="http://pastebin.com/MEpr1DWQ">
				<!--[if SafMob]>
			<style>body{-webkit-text-size-adjust:none;}</style>
		<![endif]-->
		<script>
		  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
		  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
		  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
		  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
		
		  ga('create', 'UA-58643-34', 'auto');
	 	  ga('require', 'displayfeatures');
		  ga('send', 'pageview');
		
		</script>
		<script type="text/javascript">
		 if (top != self) 
		 top.location.href = location.href;
		 </script>
	</head>
	<body>
	<div id="super_frame">
		<div id="logo" onclick="location.href='/'" title="Create New Paste"></div>
		<div id="header">
			<div id="header_top">
				<span class="span_left more">PASTEBIN</span><span class="span_left less"> &nbsp;|&nbsp; #1 paste tool since 2002</span><span class="min_max_span narrow_it" title="Change layout width"></span><span class="min_max_span wide_it" style="display:none" title="Change layout width"></span>				<ul class="top_menu">
					<li class="no_border_li"><a href="http://pastebin.com/" accesskey="n">create new paste</a></li><li><a href="http://pastebin.com/tools">tools</a></li><li><a href="http://pastebin.com/api">api</a></li><li><a href="http://pastebin.com/archive">archive</a></li><li><a href="http://pastebin.com/faq">faq</a></li>
				</ul>
			</div>
			<div id="header_middle">
				<span class="span_left big"><a href="http://pastebin.com/">PASTEBIN</a></span> 
				<a href="http://twitter.com/pastebin" target="_blank"><img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="" class="i_tf" height="20" width="122" border="0"></a>	<iframe class="vfvsodkyebepsehnzhox" src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/like.htm" scrolling="no" style="border:none; overflow:hidden; width:100px; height:21px;margin:13px 0 0 10px;vertical-align:top" allowtransparency="true" frameborder="0"></iframe>
				<div id="header_middle_search">
					<form class="search_form" name="search_form" method="get" action="/search" id="cse-search-box">
					    <input name="cx" value="013305635491195529773:0ufpuq-fpt0" type="hidden">
					    <input name="cof" value="FORID:10" type="hidden">
					    <input name="ie" value="UTF-8" type="hidden">
						<input class="search_input" name="q" size="5" placeholder="search..." x-webkit-speech="" type="text"><input name="sa" class="search_button" src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="Search..." value="Search" type="image">
					</form>
				</div>					
			</div>
			<div id="header_bottom">
				<div class="div_top_menu">
					<img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" class="i_n" alt="" height="16" width="16" border="0"> <a href="http://pastebin.com/">create new paste</a> 
					&nbsp;&nbsp;&nbsp; <img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" class="i_t" alt="" height="16" width="16" border="0"> <a href="http://pastebin.com/trends">trending pastes</a>
				</div>
				<ul class="top_menu">
					<li class="no_border_li"><a href="http://pastebin.com/signup">sign up</a></li><li><a href="http://pastebin.com/login">login</a></li><li><a href="http://pastebin.com/alerts">my alerts</a></li><li><a href="http://pastebin.com/settings">my settings</a></li><li><a href="http://pastebin.com/profile">my profile</a></li>				</ul>		
			</div>			
		</div>

			<div class="frame_spacer"><!-- --></div>
			<div style="height:35px;line-height:35px;font-size:0.85em;"><span style="float:right;text-align:right;">Want more features on Pastebin? <a href="http://pastebin.com/signup"><b>Sign Up</b></a>, it's FREE!</span></div>
		<div class="frame_spacer"><!-- --></div>
		<div id="monster_frame">
			<div id="content_frame">
				<div id="content_right">
										<div class="content_right_menu">
									<div class="content_right_title"><a href="http://pastebin.com/archive">Public Pastes</a></div>	
									<div id="menu_2">
										<ul class="right_menu"><li><a href="http://pastebin.com/fHfvfrgP">Untitled</a><span>8 sec ago</span></li><li><a href="http://pastebin.com/0kj22v4Q">Untitled</a><span>4 sec ago</span></li><li><a href="http://pastebin.com/hpAETvWA">Untitled</a><span>C# | 8 sec ago</span></li><li><a href="http://pastebin.com/45P86B4R">triangulo</a><span>25 sec ago</span></li><li><a href="http://pastebin.com/kRZ6BWHb">awakw01</a><span>18 sec ago</span></li><li><a href="http://pastebin.com/5gsJZcJ9">Untitled</a><span>24 sec ago</span></li><li><a href="http://pastebin.com/MKUE0EAz">Array with Objects</a><span>PHP | 36 sec ago</span></li><li><a href="http://pastebin.com/0nv9b9Zx">Untitled</a><span>36 sec ago</span></li></ul></div></div>					
			<div style="padding: 0; width:160px;margin: 10px 0;clear:left;">
				<script type="text/javascript"><!--
					e9 = new Object();
				    e9.size = "160x600,120x600";
				//--></script>
				<script type="text/javascript" src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/tags.js"></script>
			</div>					<div id="steadfast" title="Pastebin is proudly hosted by Steadfast.net" onclick="location.href='http://steadfast.net/?utm_source=pastebin.com&amp;utm_medium=referral&amp;utm_content=hosting_by_banner&amp;utm_campaign=referral_20140118_x_x_pastebin_partner&amp;source=referral_20140118_x_x_pastebin_partner'"></div>
				</div>
				<div id="content_left">

	<div class="paste_box_frame">
		<div class="tweet">


			<div onclick="facebookpopup('/MEpr1DWQ'); return false;" id="b_facebook2"><span id="b_facebook"></span></div>
			<div onclick="twitpopup('/MEpr1DWQ'); return false;" id="b_twitter2"><span id="b_twitter"></span></div>

		</div>
		<div class="paste_box_icon">
			<img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" class="i_gb" alt="Guest" border="0">	
		</div>
		<div class="paste_box_info">
			<div class="paste_box_line1" title="Untitled"><img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" class="i_p0" title="Public paste, everybody can see this paste." alt="" height="16" width="16" border="0"><h1>Untitled</h1> </div>
			<div class="paste_box_line2">By: a guest  on <span title="Monday 19th of January 2015 10:55:33 AM CDT" style="cursor:help;border-bottom: 1px dotted;">Jan 19th, 2015</span> &nbsp;|&nbsp; syntax: <a href="http://pastebin.com/archive/text">None</a> &nbsp;|&nbsp; size: 13.96 KB &nbsp;|&nbsp; views: <span title="Number of unique visitors to this paste" style="cursor:help;border-bottom: 1px dotted;">216</span> &nbsp;|&nbsp; expires: Never</div>
			<div class="paste_box_line3"><a href="http://pastebin.com/download.php?i=MEpr1DWQ" rel="nofollow">download</a> &nbsp;|&nbsp; <a href="http://pastebin.com/raw.php?i=MEpr1DWQ" target="_blank" rel="nofollow">raw</a> &nbsp;|&nbsp; <a href="http://pastebin.com/embed.php?i=MEpr1DWQ" rel="nofollow">embed</a> &nbsp;|&nbsp; <a href="http://pastebin.com/report.php?i=MEpr1DWQ" rel="nofollow">report abuse</a> &nbsp;|&nbsp; <a href="http://pastebin.com/print.php?i=MEpr1DWQ" rel="nofollow">print</a></div>
		</div>
	</div>
	
			<div class="banner_728">
				<script type="text/javascript"><!--
					e9 = new Object();
				    e9.size = "970x250,728x90";
				//--></script>
				<script type="text/javascript" src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/tags.js"></script>
				<div id="5e2e4b27a0" class="pagefair-acceptable"></div>
			</div><div style="align-content: stretch; align-items: stretch; align-self: stretch; animation: 0s cubic-bezier(0.25, 0.1, 0.25, 1) 0s normal none 1 running none; backface-visibility: visible; background: none repeat scroll 0% 0% transparent; background-blend-mode: normal; border: 0px none rgb(24, 24, 24); border-radius: 0px; border-collapse: separate; border-spacing: 0px; bottom: auto; box-decoration-break: slice; box-shadow: none; box-sizing: content-box; caption-side: top; clear: left; clip: auto; color: rgb(24, 24, 24); content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; flex: 0 1 auto; flex-flow: row nowrap; float: none; font: 400 16px/24px segoe ui,trebuchet MS,Lucida Sans Unicode,Lucida Sans,sans-serif; height: auto; image-orientation: 0deg; ime-mode: auto; justify-content: flex-start; left: auto; letter-spacing: normal; list-style: outside none disc; margin: 0px; marker-offset: auto; max-height: none; max-width: none; min-height: 90px; min-width: 0px; mix-blend-mode: normal; opacity: 1; order: 0; outline: 0px none rgb(0, 0, 0); outline-offset: 0px; overflow: visible; padding: 0px 0px 10px; page-break-after: auto; page-break-before: auto; page-break-inside: auto; perspective: none; perspective-origin: 50% 50%; pointer-events: auto; position: static; quotes: &quot;“&quot; &quot;”&quot; &quot;‘&quot; &quot;’&quot;; resize: none; right: auto; table-layout: auto; text-align: start; -moz-text-decoration-color: rgb(24, 24, 24); -moz-text-decoration-line: none; -moz-text-decoration-style: solid; text-indent: 0px; text-overflow: clip; text-shadow: none; text-transform: none; top: auto; transform: none; transform-origin: 50% 50% 0px; transform-style: flat; transition: all 0s cubic-bezier(0.25, 0.1, 0.25, 1) 0s; unicode-bidi: -moz-isolate; vertical-align: baseline; visibility: visible; white-space: normal; width: 728px; word-break: normal; word-spacing: 0px; word-wrap: normal; z-index: auto; -moz-appearance: none; -moz-binding: none; -moz-box-align: stretch; -moz-box-direction: normal; -moz-box-flex: 0; -moz-box-ordinal-group: 1; -moz-box-orient: horizontal; -moz-box-pack: start; -moz-columns: auto auto; -moz-column-fill: balance; -moz-column-gap: 16px; -moz-column-rule: 0px none rgb(24, 24, 24); -moz-float-edge: content-box; -moz-force-broken-image-icon: 0; -moz-hyphens: manual; -moz-image-region: auto; -moz-orient: auto; -moz-outline-radius: 0px; -moz-stack-sizing: stretch-to-fit; -moz-tab-size: 8; -moz-text-align-last: auto; -moz-text-size-adjust: auto; -moz-user-focus: none; -moz-user-input: auto; -moz-user-modify: read-only; -moz-user-select: auto; -moz-window-dragging: no-drag; -moz-window-shadow: default; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: rgb(0, 0, 0); fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: rgb(0, 0, 0); flood-opacity: 1; image-rendering: auto; lighting-color: rgb(255, 255, 255); marker: none; mask: none; mask-type: luminance; paint-order: normal; shape-rendering: auto; stop-color: rgb(0, 0, 0); stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; vector-effect: none;"><div id="1018840f" class="c6d92d4c  " style="background: #eee url(http://pagefair.net/static/v294254/images/bg-leaderboard.png) no-repeat center; background-color: #fff; border: none; display: block; font-family: Tahoma, Verdana, Segoe, sans-serif; font-weight: normal; height: 90px; margin: 0; overflow: hidden; padding: 0; position: relative; text-align: left; text-shadow: none; vertical-align: baseline; width: 728px; z-index: 999;"> <a href="http://adfeed.pagefair.net/ads/text/click?imp=102&amp;fallback=http%3A%2F%2Fpastebin.com%2Fpro&amp;url_id=0&amp;_=1421952357" class="12f05aed" target="_blank" style="border: 0; font-family: Tahoma, Verdana, Segoe, sans-serif; font-weight: normal; margin: 0; padding: 0; text-align: left; text-decoration: none; text-shadow: none; vertical-align: baseline;"> <div class="6e81f5a2" style="border: 0; color: #c10543; font-family: 'Trebuchet MS', 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Tahoma, sans-serif; font-size: 15px; font-weight: normal; letter-spacing: 0.5px; line-height: 20px; margin: 0; margin-left: 24px; padding: 0; padding-top: 17px; text-align: center; text-shadow: none; text-transform: uppercase; vertical-align: baseline; width: 658px;">Support Pastebin by buying a PRO account</div> <div class="7c40cded" style="border: 0; color: #515151; font-family: Tahoma, Verdana, Segoe, sans-serif; font-size: 13px; font-weight: normal; line-height: 17px; margin: 0; margin-left: 24px; padding: 2px 0 0 0; text-align: center; text-shadow: none; vertical-align: baseline; width: 658px;">For only $2.95 you can unlock loads of extra features, and support Pastebin's development at the same time.</div> <div class="5070875a" style="border: 0; color: #8f8f8f; font-family: Tahoma, Verdana, Segoe, sans-serif; font-size: 13px; font-weight: normal; line-height: 20px; margin: 0; margin-left: 24px; padding: 0 0 3px 0; text-align: center; text-shadow: none; vertical-align: baseline; width: 658px;">pastebin.com/pro</div> <div class="87e5b824" style="background-image: none; background-repeat: repeat; background-attachment: scroll; background-position: 0% 0%; background-clip: border-box; background-origin: padding-box; background-size: auto auto; border: 2px solid rgb(205, 6, 72); color: rgb(205, 6, 72); display: none; font-family: Tahoma,Verdana,Segoe,sans-serif; font-weight: normal; margin: 0px; padding: 0px; text-align: left; text-shadow: none; transition: all 0.25s ease-in-out 0s; vertical-align: baseline;">›</div> </a> <div class="cae2bff3 " style="-ms-transform: rotate(90deg); -ms-transform-origin: right bottom 0; -o-transform: rotate(90deg); -o-transform-origin: right bottom 0; -webkit-transform: rotate(90deg); -webkit-transform-origin: right bottom 0; background-color: #2c2c2c; border: none; border-color: #ADADAD; color: #fff; float: left; font-size: 12px; height: 23px; line-height: 22px; moz-transform: rotate(90deg); moz-transform-origin: right bottom 0; position: absolute; right: 23px; text-align: center; top: 67px; transform: rotate(90deg); transform-origin: right bottom 0; width: 90px;">Advertisement</div><div class="89893ccc " style="background-color: rgb(44, 44, 44); border: medium none rgb(173, 173, 173); color: rgb(255, 255, 255); cursor: pointer; height: 90px; position: absolute; right: 0px; top: 0px; width: 23px; display: block; opacity: 0.904508;"> <div class="0a83a045" style="background-color: inherit; float: left; height: 23px; width: 23px;"> <div class="a7a9a646" style="background-image: url(http://pagefair.net/static/v294254/images/vote_up.png); background-position: center center; background-repeat: no-repeat; height: 100%; width: 100%;"></div> </div> <div class="0a83a045" style="background-color: inherit; float: left; height: 23px; width: 23px;"> <div class="228f6b12" style="background-image: url(http://pagefair.net/static/v294254/images/vote_down.png); background-position: center center; background-repeat: no-repeat; height: 100%; width: 100%;"></div> </div> <div class="0a83a045" style="background-color: inherit; float: left; height: 23px; width: 23px;"> <div class="ad07e7a8" style="background-image: url(http://pagefair.net/static/v294254/images/more_info.png); background-position: center center; background-repeat: no-repeat; height: 100%; width: 100%;"></div> </div> <div class="0a83a045" style="background-color: inherit; float: left; height: 23px; width: 23px;"> <div class="a1bc7c0c" style="background-image: url(http://pagefair.net/static/v294254/images/opt_out.png); background-position: center center; background-repeat: no-repeat; height: 100%; width: 100%;"></div> </div> </div><div class="c5fd8fdd" style="background: url(http://pagefair.net/static/v294254/images/feedback_overlay_bg.png) repeat; display: none; height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"> <div class="58a1e16d" style="color: #fff; font-size: 14px; line-height: 20px; margin-top: -10px; position: absolute; text-align: center; top: 50%; width: 100%;"></div> </div></div></div>
			<div class="layout_clear"></div><div id="code_frame2">
	<div id="code_frame">
		<div id="code_buttons">
		
		<a href="javascript:togglev();" title="Show/Hide line numbers"><img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="" class="i16 line" border="0"></a> 
		<a href="javascript:togglew('text');" title="Toggle text wrapping"><img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="" class="i16 wrap" border="0"></a> 
		<a href="#" class="copyme" onclick="selectText('selectable');showdiv('copied');" title="Copy text to clipboard"><img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="" class="i16 clipboard" border="0"></a> <span id="copied">Text below is selected. Please press Ctrl+C to copy to your clipboard. (⌘+C on Mac)</span>

		</div>
		<div id="selectable">		
		<div class="text"><ol><li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; .intel_syntax noprefix</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; .global _start</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//deklaracja "zmiennych" (stalych oczywiscie :) )</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; .data</div></li>
<li class="li2"><div class="de2">zmienna1:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; .ascii "komunikat informujacy, ze uzytkownik podal zbyt malo danych\n"</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; .equ&nbsp; 
&nbsp; dlugosc1, $-zmienna1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//liczy dlugosc komunikatu</div></li>
<li class="li1"><div class="de1">zmienna2:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; .ascii "komunikat informujacy, ze uzytkownik podal nieprawidlowo liczby\n"</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; .equ&nbsp; &nbsp; dlugosc2, $-zmienna2</div></li>
<li class="li2"><div class="de2">zmienna3:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; .ascii "komunikat informujacy, ze uzytkownik podal nieprawidlowy element ciagu\n"</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; .equ&nbsp; &nbsp; dlugosc3, $-zmienna3</div></li>
<li class="li1"><div class="de1">zmienna4:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; .ascii "komunikat informujacy, ze uzytkownik podal liczbe ciagu &nbsp;wieksza niz 255\n"</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; .equ&nbsp; &nbsp; dlugosc4, $-zmienna4</div></li>
<li class="li2"><div class="de2">zmienna5:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; .ascii "wynik: "</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; .equ&nbsp; &nbsp; dlugosc5, $-zmienna5</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//deklaracja zmiennych nieinicjalizowanych</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; .bss&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //</div></li>
<li class="li2"><div class="de2">zmienna6: </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; .skip 300 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // rozmiar</div></li>
<li class="li2"><div class="de2">zmienna7: </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; .skip 300</div></li>
<li class="li2"><div class="de2">zmienna8:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; .skip 300</div></li>
<li class="li2"><div class="de2">zmienna9:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; .skip 300</div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; .text</div></li>
<li class="li2"><div class="de2">_start:</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jmp &nbsp; &nbsp; etykieta5</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//procedura sprawdzajaca czy uzytkownik wpisal poprawnie element ciagu</div></li>
<li class="li1"><div class="de1">etykieta1:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; bh, 48</div></li>
<li class="li1"><div class="de1">etykieta2:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [eax], bh</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta3</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; bh</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; bh, 58</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta2</div></li>
<li class="li1"><div class="de1">etykieta3:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; bh, 58</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta4</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; bl</div></li>
<li class="li1"><div class="de1">etykieta4:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; eax</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [eax], byte ptr 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; ret</div></li>
<li class="li2"><div class="de2">etykieta5:</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jmp &nbsp; &nbsp; etykieta109</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//procedura sprawdzajaca czy uzytkownik wpisal poprawnie liczby</div></li>
<li class="li2"><div class="de2">etykieta110:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; bh, 48&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //wypisanie 0 w kodzie ascii</div></li>
<li class="li2"><div class="de2">etykieta111:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [eax], bh</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta112</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; 
&nbsp; bh&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; //zwiekszamy 0 w kodzie ascii</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; 
&nbsp; bh, 58&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //sprawdzamy czy 
dojechalismy do konca, spradzamy cyfry</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta111 &nbsp; &nbsp; //jezeli nie to skaczemy do etykiety 111</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; bh, 7 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //dodaje 7 zeby na litery (A) bylo</div></li>
<li class="li1"><div class="de1">etykieta121:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //sprawedzamy DUZE litery tym samym sposobem co na gorze</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [eax], bh &nbsp; &nbsp; &nbsp; //zapisujemy w kodzie ascii, wkladamy zero</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta112 &nbsp;//sprawdzamy czy nie, jezeli nie to dalej</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; bh</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; bh, 71&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //sprawdzam czy A</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta121</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; bh, 26&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //sprawdzamy male literki</div></li>
<li class="li2"><div class="de2">etykieta122:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //sprawdzamy male literki</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [eax], bh</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta112</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; bh</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; bh, 103</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta122</div></li>
<li class="li2"><div class="de2">etykieta112: //jezeli nie znalazl zadnej litery</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; 
&nbsp; bh, 103 //jezeli 103 to zwiekszanie bl, bo sprawdzanie bl, jezeli
 zero to niektnieta, jezeli wieksza od zero to blad</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta113</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; bl</div></li>
<li class="li2"><div class="de2">etykieta113:&nbsp; &nbsp; //przesuwanie wskaznika w tablicy charow</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; eax &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //przeskakiwanie na nastepne miejsce</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [eax], byte ptr 0 &nbsp; &nbsp; &nbsp; //byte ptr bo porownuje 1 bajt</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; 
&nbsp; etykieta110 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //jezeli 
nie koniec to od nowa od gory</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; ret</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">etykieta109:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jmp &nbsp; &nbsp; etykieta10</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//procedura odwracajaca wynik i usuwajaca zera ktore moga pojawic sie na
 poczatku wyniku</div></li>
<li class="li1"><div class="de1">odwracanie:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; ecx, ecx</div></li>
<li class="li1"><div class="de1">etykieta6:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ebx</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ecx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [ebx], byte ptr 0</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta6</div></li>
<li class="li2"><div class="de2">etykieta7:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; dec &nbsp; &nbsp; ecx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; ecx, 0</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta8</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; [ebx], byte ptr 0</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; dec &nbsp; &nbsp; ebx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [ebx], byte ptr 48</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta7</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ebx</div></li>
<li class="li1"><div class="de1">etykieta8:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ecx</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; push &nbsp; &nbsp;ecx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; ecx, ecx</div></li>
<li class="li1"><div class="de1">etykieta9:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; ecx, 2</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; push &nbsp; &nbsp;ecx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; dec &nbsp; &nbsp; ebx</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; cl, [eax]</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ch, [ebx]</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; [eax], ch</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; [ebx], cl</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; eax</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; pop &nbsp; &nbsp; ecx</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; ecx, [ebp-8]</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jb &nbsp; &nbsp; &nbsp;etykieta9</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; pop &nbsp; &nbsp; ecx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; ret</div></li>
<li class="li1"><div class="de1">etykieta10:</div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jmp &nbsp; &nbsp; etykieta18</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//procedura dodajaca do siebie dwie liczby</div></li>
<li class="li1"><div class="de1">etykieta11:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; push&nbsp; &nbsp; ecx</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ch, [eax]</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; ch, 0</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta12</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; ch, 65</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok1</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; ch, 55</div></li>
<li class="li1"><div class="de1">skok1:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; ch, 48</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok2</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; ch, 48</div></li>
<li class="li1"><div class="de1">skok2:</div></li>
<li class="li2"><div class="de2">etykieta12:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; dl, [ebx]</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 65</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok3</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; dl, 55</div></li>
<li class="li1"><div class="de1">skok3:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 48</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok4</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; dl, 48</div></li>
<li class="li1"><div class="de1">skok4:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dl, dh</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; dh, dh</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dl, ch</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 16</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; etykieta13</div></li>
<li class="li1"><div class="de1">etykieta107:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; dh</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; dl, 16</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 16</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnb &nbsp; &nbsp; etykieta107</div></li>
<li class="li2"><div class="de2">etykieta13:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 10</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok5</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dl, 55</div></li>
<li class="li2"><div class="de2">skok5:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 9</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; ja&nbsp; &nbsp; &nbsp; skok6</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dl, 48</div></li>
<li class="li2"><div class="de2">skok6:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; pop &nbsp; &nbsp;ecx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; [ecx], dl</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ecx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; eax</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ebx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [ebx], byte ptr 0</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta11</div></li>
<li class="li2"><div class="de2">etykieta14:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [eax], byte ptr 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta16</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; dl, [eax]</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 65</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok7</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; dl, 55</div></li>
<li class="li1"><div class="de1">skok7:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 48</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok8</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; dl, 48</div></li>
<li class="li1"><div class="de1">skok8:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dl, dh</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; dh, dh</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 16</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; etykieta15</div></li>
<li class="li2"><div class="de2">etykieta108:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; dh</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; dl, 16</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 16</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jnb &nbsp; &nbsp; etykieta108</div></li>
<li class="li1"><div class="de1">etykieta15:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dh, 10</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok9</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dh, 55</div></li>
<li class="li1"><div class="de1">skok9:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dh, 9</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; ja&nbsp; &nbsp; &nbsp; skok10</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dh, 48</div></li>
<li class="li1"><div class="de1">skok10:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; [ecx], dl</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; eax</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ecx</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jmp &nbsp; &nbsp; etykieta14</div></li>
<li class="li2"><div class="de2">etykieta16:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dh, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta17</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dh, 10</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok11</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dh, 55</div></li>
<li class="li2"><div class="de2">skok11:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dh, 9</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; ja&nbsp; &nbsp; &nbsp; skok12</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dh, 48</div></li>
<li class="li2"><div class="de2">skok12:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; [ecx], dh</div></li>
<li class="li2"><div class="de2">etykieta17:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; ret</div></li>
<li class="li2"><div class="de2">etykieta18:</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jmp &nbsp; &nbsp; etykieta22</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li2"><div class="de2">etykieta19:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; //procedura mnozaca dwie liczby</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; dl, [ecx]</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 97&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //przekonwertowanie na int </div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok13</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; 
&nbsp; dl, 87&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //liczba ktora chcemy 
dodawac, (97=a)-87=10</div></li>
<li class="li2"><div class="de2">skok13:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 65</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok14</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; dl, 55</div></li>
<li class="li2"><div class="de2">skok14:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 48</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok15</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; dl, 48</div></li>
<li class="li2"><div class="de2">skok15: &nbsp;//pierwszy mnoznik</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; push&nbsp; &nbsp; ecx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; cl, dl</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; 
&nbsp; dl, cl&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //moznik2</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; 
&nbsp; dl, cl&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //mnoznik3</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; 
&nbsp; dl, cl&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; 
&nbsp; dl, cl&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dl, cl&nbsp; </div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; 
&nbsp; dl, dh&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; //przeniesienie w dodawaniu pisemnym</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; dh, dh</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; pop &nbsp; &nbsp; ecx</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; 
&nbsp; dl, 16&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; //jezeli mniejsze od 16</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; 
&nbsp; &nbsp; etykieta20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
 //jezeli tak to przeskakujemy</div></li>
<li class="li1"><div class="de1">etykieta104:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //jezeli nie to wyliczamy przeniesienie</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; dl, 16</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; dh</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 16</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnb &nbsp; &nbsp; etykieta104</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li1"><div class="de1">etykieta20: &nbsp; &nbsp; </div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dl, 48&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //konwertowanie na liczbe/litere, zle</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; 
&nbsp; [ebx], dl &nbsp; &nbsp; &nbsp; //pierwszy slupek dodawnia 
pisemnego wrzucamy na 1 miejsce w ebx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; 
&nbsp; ebx &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; 
&nbsp; ecx &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [ecx], byte ptr 0</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta19&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; 
&nbsp; dh, 0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //czy istnieje przeniesienie</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta21</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; 
&nbsp; dh, 10&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; //jezeli jest liczba</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok16</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dh, 55&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //konwertuje na duza literke</div></li>
<li class="li1"><div class="de1">skok16: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //przeniesienie</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dh, 9 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //sprawdzanie czy </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; ja&nbsp; &nbsp; &nbsp; skok17&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //jezeli wieksze</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dh, 48&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //jezeli nie to dodaje 48</div></li>
<li class="li1"><div class="de1">skok17:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; [ebx], dh</div></li>
<li class="li1"><div class="de1">etykieta21:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; ret</div></li>
<li class="li1"><div class="de1">etykieta22:</div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jmp &nbsp; &nbsp; etykieta105</div></li>
<li class="li2"><div class="de2">procedura2:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; //procedura mnozaca dwie liczby</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; dl, [ecx]</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 96</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok18</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; dl, 87</div></li>
<li class="li2"><div class="de2">skok18:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 65</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok19</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; dl, 55</div></li>
<li class="li2"><div class="de2">skok19:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 48</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok20</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; dl, 48</div></li>
<li class="li2"><div class="de2">skok20:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; push&nbsp; &nbsp; ecx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; cl, dl</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; 
&nbsp; dl, cl&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; 
&nbsp; dl, cl&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; 
&nbsp; dl, cl&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; 
&nbsp; dl, cl&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dl, cl</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; 
&nbsp; dl, cl&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; 
&nbsp; dl, cl&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dl, dh</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; dh, dh</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; pop &nbsp; &nbsp; ecx</div></li>
<li class="li1"><div class="de1">etykieta101:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 16</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; etykieta102</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; dl, 16</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; dh</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 16</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnb &nbsp; &nbsp; etykieta101</div></li>
<li class="li2"><div class="de2">etykieta102:&nbsp; &nbsp; </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dl, 48</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; [ebx], dl</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ebx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ecx</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [ecx], byte ptr 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; procedura2</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dh, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta103</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dh, 10</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jb&nbsp; &nbsp; &nbsp; skok21</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dh, 55</div></li>
<li class="li2"><div class="de2">skok21:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dh, 9</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; ja&nbsp; &nbsp; &nbsp; skok22</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; dh, 48</div></li>
<li class="li2"><div class="de2">skok22:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; [ebx], dh</div></li>
<li class="li2"><div class="de2">etykieta103:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; ret</div></li>
<li class="li2"><div class="de2">etykieta105:</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebp, esp</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//sprawdzamy czy uzytkownik podal odpowiednia ilosc liczb jezeli podal 
za malo wypisze komunikat o bledzie</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, [ebp+8]&nbsp; &nbsp; //wrzucamy pierwszy parametr</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; 
&nbsp; eax, 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; //sprawdzamy czy podany 1 parametr jest nullem</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta23&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 4</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; 
&nbsp; ebx, 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //za malo parametrow, wypisanie 
komunikatow z zmienna1. dlugosc1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; 
&nbsp; ecx, offset zmienna1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//offset - odwolujemy sie do zmiennej</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; edx, offset dlugosc1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //konczenie programu</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li1"><div class="de1">etykieta23:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, [ebp+12] &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //drugi parametr</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; eax, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta24</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 4</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna1</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; edx, offset dlugosc1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li1"><div class="de1">etykieta24:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, [ebp+16] &nbsp; //3 parametr</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; eax, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta25</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 4</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna1</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; edx, offset dlugosc1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">etykieta25:</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//sprawdzamy czy liczby sa podany poprawnie 0-F w 16tkowym</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; bl, bl</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, [ebp+8]&nbsp; &nbsp; //pierwszy argument</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; call&nbsp; &nbsp; etykieta110 //zwieksza 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, [ebp+12] &nbsp; //drugi argument</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; call&nbsp; &nbsp; etykieta110</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; bl, 0 &nbsp; //sprawdzamy czy zero</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta26&nbsp; &nbsp; &nbsp; //jezeli bl rozne od 0 to </div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 4&nbsp; //wypisywanie komunikatu </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 1</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna2</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; edx, offset dlugosc2</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 1</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 0</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">etykieta26:</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//sprawdzamy czy elelemt ciagu do wyliczenia jest podany poprawnie</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, [ebp+16] //trzeci argument</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; call&nbsp; &nbsp; etykieta1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; bl, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; 
&nbsp; &nbsp; etykieta27&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
 /jezeli nie ma bledu to idziemy do etykieta27</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 4</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna3</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; edx, offset dlugosc3</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 1&nbsp; //konczenie programu</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li1"><div class="de1">etykieta27:</div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//konwersacja ciagu znakow w elemencie ciagu na liczbe (char to int) w 
3argumencie</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; ebx, ebx;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, [ebp+16] &nbsp; //zapisujemy do 2 rejestrow 3argument</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, [ebp+16]</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //pomijam
 zera ktore uzytkownik mogl wpisac na poczatku liczby, jezeli liczba 
jest zerem wypisze blad, 003 to pomijamy 0</div></li>
<li class="li2"><div class="de2">etykieta28:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; 
&nbsp; [eax], byte ptr 0 &nbsp; &nbsp; &nbsp; //sprawdzanie czy 1 
wartosc = 0, az dojdzie sie do nulla</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta29</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; 
&nbsp; eax, 4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; //jezeli null to wypisze blad i zakonczy program</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna3</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; edx, offset dlugosc3</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li1"><div class="de1">etykieta29:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [eax], byte ptr 48&nbsp; &nbsp; &nbsp; //spradzamy czy 0 w ascii</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta30&nbsp; &nbsp; &nbsp; //jezeli nie to</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; 
&nbsp; eax &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; //przesuwamy sie dalej w tablicy, sprawdzamy dalej</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ecx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jmp &nbsp; 
&nbsp; etykieta28&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//jezeli 0 to skacze wyzej do etykeita28</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //jezeli 
ilosc cyfr jest wieksza niz 3 to to wypisze blad w przeciwnym razie 
dokona konwersacji na liczbe</div></li>
<li class="li1"><div class="de1">etykieta30:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ecx</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; 
&nbsp; [ecx], byte ptr 0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; //spradzenie ilu cyfrowa liczba, 3 argument</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; 
&nbsp; &nbsp; etykieta35&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //jezeli null 
to skaczemy do etykiety 35</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ecx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; 
&nbsp; [ecx], byte ptr 0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; //spradzanie czy 3cyfrowa</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta33</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ecx</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [ecx], byte ptr 0 &nbsp; &nbsp; &nbsp; //spradzanie czy 4cyfrowa</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; 
&nbsp; &nbsp; etykieta31&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
 &nbsp; &nbsp; &nbsp; &nbsp; //wyswietlanie komunikatu ze za duzo 
liczbowa </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 4</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna4</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; edx, offset dlugosc4</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">etykieta31: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //konwersje</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; 
&nbsp; cl, [eax] &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//wskaznik na 1 miejsce, wrzucenie 1 liczby w kodzie ascii</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; eax &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //nastepne miejsce</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; 
&nbsp; cl, 48&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //odejmujemy 48 zeby 
zamienic z ascii na liczbe</div></li>
<li class="li2"><div class="de2">etykieta32:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; 
&nbsp; ebx, 100&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
// pierwsza liczba na setki</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; dec &nbsp; 
&nbsp; cl&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; 
&nbsp; &nbsp; odejmowanie 1 liczby</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; 
&nbsp; cl, 0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; //jezeli 0 to skacze do 32</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta32</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">etykieta33: &nbsp; &nbsp; //dziesiatki sprawdzenie czy 0, moze byc 0 dlatego zabezpieczenie przed zapetleniem, </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; cl, [eax]</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; eax</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; cl, 48</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; cl, 0</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; 
&nbsp; &nbsp; etykieta35&nbsp; &nbsp; &nbsp; //jezeli zero to do 
etykiety35 zeby sie nie zapetlilo</div></li>
<li class="li2"><div class="de2">etykieta34: //dziesiatki cala formulka z dodaniem 10</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; add &nbsp; &nbsp; ebx, 10</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; dec &nbsp; &nbsp; cl</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; cl, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta34</div></li>
<li class="li1"><div class="de1">etykieta35: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //jednosci zabezpieczenie przed 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; cl, [eax]</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; sub &nbsp; &nbsp; cl, 48</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; cl, 0</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta37</div></li>
<li class="li2"><div class="de2">etykieta36: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //jednosci normalne</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ebx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; dec &nbsp; &nbsp; cl</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; cl, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta36</div></li>
<li class="li1"><div class="de1">etykieta37:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //jezeli 
liczba jest wieksza niz 255 wyppisze blad</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; ebx, 256&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //spradzanie</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jb &nbsp; 
&nbsp; &nbsp;etykieta38&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//jezeli mniejsze to przeskok, jezeli wieksze to komunikat o bledzie</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 4</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna4</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; edx, offset dlugosc4</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">etykieta38:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //liczba 
jest ok wiec przepisujemy ja do malego rejestru</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; dl, dl</div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">etykieta39: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //przerzucanie z duzego ebx do malego dl</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; dec &nbsp; &nbsp; ebx</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; dl</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; ebx,0</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta39</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//przepisuje do zmiennych obie liczby od tylu, zeby latwiej dodawac 
pisemnie</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, [ebp+12] &nbsp; //do eax drugi parametr (2 liczba)</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; 
&nbsp; ebx, offset zmienna7&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//operowanie w ebx w zmiennej7, co zapisanie w ebx bedzie w zmiennej7</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; dh, dh</div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">etykieta40: &nbsp; &nbsp; //przesuniecie wskaznika z liczby na koniec (0 null)</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; eax</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; dh</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [eax], byte ptr 0</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta40</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; ch, ch</div></li>
<li class="li1"><div class="de1">etykieta41: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //przesuwanie o 1 miejsce w tyl, liczba 123 jako 321</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; dec &nbsp; &nbsp; eax</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; dec &nbsp; &nbsp; dh</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; cl, [eax]</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; 
&nbsp; [ebx], cl &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 
przypisanie zmiennej </div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ebx</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dh, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta41</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, [ebp+8]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //pobiera 1 parametr</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; 
&nbsp; ebx, offset zmienna6&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; //przypisuje do zmiennej6</div></li>
<li class="li2"><div class="de2">etykieta42:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; eax</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; dh</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; [eax], byte ptr 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta42</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li2"><div class="de2">etykieta43:</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; dec &nbsp; &nbsp; eax</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; dec &nbsp; &nbsp; dh</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; cl, [eax]</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; [ebx], cl</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; inc &nbsp; &nbsp; ebx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dh, 0</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta43</div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//sprawdzam czy uzytkownik podal element 1 tak wypisuje peirwszya liczba</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 1 &nbsp; //sprawdzamy czy uzytkownik wpisal 1 to wtedy konczymy i wypisujemy 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta44</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jmp &nbsp; &nbsp; etykieta46&nbsp; &nbsp; &nbsp; //jezeli nie jest 1 to przeskakujemy do etykieta46</div></li>
<li class="li1"><div class="de1">etykieta44:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//sprawdzam czy uzytkownik podal elelment 2 jezeli tak wypisuje druga 
liczbe</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; dec &nbsp; 
&nbsp; dl&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //odejmujemy 1 zeby latwiej w 
petli skakac</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 1 &nbsp; </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jnz &nbsp; &nbsp; etykieta45</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; jmp &nbsp; &nbsp; etykieta47</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//dokonuje dodawania&nbsp; &nbsp; odpowiednia ilosc razy z odpowiednim 
mnoznikiemi wypisuje wynik (w odwrotnej kolejnosci)</div></li>
<li class="li1"><div class="de1">etykieta45:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; dec &nbsp; &nbsp; dl</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 0</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta47</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; push&nbsp; 
&nbsp; edx &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; //puszujemy zeby nie stracic dl</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; dh, dh</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; 
&nbsp; ecx, offset zmienna6&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//pierwsza 1 zapisana od tylu</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; 
&nbsp; ebx, offset zmienna8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
//wynik mnozenia 1 liczby</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; call&nbsp; &nbsp; etykieta19</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; dh, dh</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna7</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, offset zmienna9</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; call&nbsp; 
&nbsp; procedura2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
 &nbsp; &nbsp; &nbsp; //drugi mnoznik</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, offset zmienna8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //dodawanie 2 liczby</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, offset zmienna9</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna6</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; dh, dh&nbsp; </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; call&nbsp; &nbsp; etykieta11</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; pop &nbsp; 
&nbsp; edx &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; //sciaga ze stosu</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; dec &nbsp; &nbsp; dl&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //porownanie z 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; cmp &nbsp; &nbsp; dl, 0</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jz&nbsp; &nbsp; &nbsp; etykieta46</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; push&nbsp; &nbsp; edx</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; dh, dh</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna7</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, offset zmienna8</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; call&nbsp; &nbsp; etykieta19</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; dh, dh&nbsp; </div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna6</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, offset zmienna9</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; call&nbsp; &nbsp; procedura2</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, offset zmienna8</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, offset zmienna9</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna7</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; xor &nbsp; &nbsp; dh, dh&nbsp; </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; call&nbsp; &nbsp; etykieta11</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; pop &nbsp; &nbsp; edx</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; jmp &nbsp; &nbsp; etykieta45</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //odwraca
 wynik i wypisuje odpowiednia liczbe</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">etykieta46: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //wypisywanie 1 liczby</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 4</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna5</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; edx, offset dlugosc5</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, offset zmienna6</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, offset zmienna6</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; call &nbsp; &nbsp;odwracanie</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 4</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; edx, ecx</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna6</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 4</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 1</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; [ecx], byte ptr 10</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; edx, 1</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 1</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 0</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">etykieta47:</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 4</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 1</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna5</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; edx, offset dlugosc5</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, offset zmienna7</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, offset zmienna7</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; call &nbsp; &nbsp;odwracanie</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 4</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 1</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; edx, ecx</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ecx, offset zmienna7</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 4</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; [ecx], byte ptr 10</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; edx, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; eax, 1</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; mov &nbsp; &nbsp; ebx, 0</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; int &nbsp; &nbsp; 0x80</div></li>
</ol></div>
		</div>
	</div></div>
	<div class="content_title">
		<span class="span_right raw_links"><a href="http://pastebin.com/index/MEpr1DWQ" rel="nofollow"><u>clone</u> this paste</a></span>
		RAW Paste Data
	</div>
	<form class="paste_form" id="myform" method="post" action="/post.php">
		<div class="textarea_border">
			<textarea style="resize: none; height: 250px;" id="paste_code" class="paste_code" name="paste_code" onkeydown="return catchTab(this,event)">	.intel_syntax noprefix
	.global _start

						//deklaracja "zmiennych" (stalych oczywiscie :) )
	.data
zmienna1:
	.ascii "komunikat informujacy, ze uzytkownik podal zbyt malo danych\n"
	.equ	dlugosc1, $-zmienna1		//liczy dlugosc komunikatu
zmienna2:
	.ascii "komunikat informujacy, ze uzytkownik podal nieprawidlowo liczby\n"
	.equ	dlugosc2, $-zmienna2
zmienna3:
	.ascii "komunikat informujacy, ze uzytkownik podal nieprawidlowy element ciagu\n"
	.equ	dlugosc3, $-zmienna3
zmienna4:
	.ascii "komunikat informujacy, ze uzytkownik podal liczbe ciagu  wieksza niz 255\n"
	.equ	dlugosc4, $-zmienna4
zmienna5:
	.ascii "wynik: "
	.equ	dlugosc5, $-zmienna5

						//deklaracja zmiennych nieinicjalizowanych
	.bss			//
zmienna6: 
	.skip 300		// rozmiar
zmienna7: 
	.skip 300
zmienna8:
	.skip 300
zmienna9:
	.skip 300

	.text
_start:


	jmp 	etykieta5
						//procedura sprawdzajaca czy uzytkownik wpisal poprawnie element ciagu
etykieta1:
	mov	bh, 48
etykieta2:
	cmp	[eax], bh
	jz	etykieta3
	inc	bh
	cmp	bh, 58
	jnz	etykieta2
etykieta3:
	cmp	bh, 58
	jnz	etykieta4
	inc 	bl
etykieta4:
	inc	eax
	cmp	[eax], byte ptr 0
	jnz 	etykieta1
	ret
etykieta5:

	jmp 	etykieta109
						//procedura sprawdzajaca czy uzytkownik wpisal poprawnie liczby
etykieta110:
	mov	bh, 48		//wypisanie 0 w kodzie ascii
etykieta111:
	cmp	[eax], bh
	jz	etykieta112
	inc	bh			//zwiekszamy 0 w kodzie ascii
	cmp	bh, 58		//sprawdzamy czy dojechalismy do konca, spradzamy cyfry
	jnz	etykieta111	//jezeli nie to skaczemy do etykiety 111
	add	bh, 7		//dodaje 7 zeby na litery (A) bylo
etykieta121:		//sprawedzamy DUZE litery tym samym sposobem co na gorze
	cmp	[eax], bh	//zapisujemy w kodzie ascii, wkladamy zero
	jz	etykieta112  //sprawdzamy czy nie, jezeli nie to dalej
	inc	bh
	cmp	bh, 71		//sprawdzam czy A
	jnz	etykieta121
	add	bh, 26		//sprawdzamy male literki
etykieta122:		//sprawdzamy male literki
	cmp	[eax], bh
	jz	etykieta112
	inc	bh
	cmp	bh, 103
	jnz	etykieta122
etykieta112: //jezeli nie znalazl zadnej litery
	cmp	bh, 103	//jezeli 103 to zwiekszanie bl, bo sprawdzanie bl, jezeli zero to niektnieta, jezeli wieksza od zero to blad
	jnz	etykieta113
	inc 	bl
etykieta113:	//przesuwanie wskaznika w tablicy charow
	inc	eax		//przeskakiwanie na nastepne miejsce
	cmp	[eax], byte ptr 0	//byte ptr bo porownuje 1 bajt
	jnz 	etykieta110		//jezeli nie koniec to od nowa od gory
	ret

etykieta109:
	jmp 	etykieta10
						//procedura odwracajaca wynik i usuwajaca zera ktore moga pojawic sie na poczatku wyniku
odwracanie:
	xor 	ecx, ecx
etykieta6:
	inc 	ebx
	inc 	ecx
	cmp 	[ebx], byte ptr 0
	jnz 	etykieta6
etykieta7:
	dec	ecx
	cmp	ecx, 0
	jz	etykieta8
	mov	[ebx], byte ptr 0
	dec 	ebx
	cmp	[ebx], byte ptr 48
	jz	etykieta7
	inc	ebx
etykieta8:
	inc 	ecx
	push 	ecx
	xor 	ecx, ecx
etykieta9:
	add 	ecx, 2
	push 	ecx
	dec 	ebx
	mov 	cl, [eax]
	mov 	ch, [ebx]
	mov 	[eax], ch
	mov 	[ebx], cl
	inc 	eax
	pop 	ecx
	cmp 	ecx, [ebp-8]
	jb 	etykieta9
	pop 	ecx
	ret
etykieta10:

	jmp	etykieta18
						//procedura dodajaca do siebie dwie liczby
etykieta11:
	push	ecx
	mov	ch, [eax]
	cmp	ch, 0
	jz	etykieta12
	cmp	ch, 65
	jb	skok1
	sub 	ch, 55
skok1:
	cmp	ch, 48
	jb	skok2
	sub 	ch, 48
skok2:
etykieta12:
	mov	dl, [ebx]
	cmp	dl, 65
	jb	skok3
	sub 	dl, 55
skok3:
	cmp	dl, 48
	jb	skok4
	sub 	dl, 48
skok4:
	add 	dl, dh
	xor	dh, dh
	add	dl, ch
	cmp	dl, 16
	jb	etykieta13
etykieta107:
	inc 	dh
	sub 	dl, 16
	cmp	dl, 16
	jnb	etykieta107
etykieta13:
	cmp	dl, 10
	jb	skok5
	add 	dl, 55
skok5:
	cmp	dl, 9
	ja	skok6
	add  	dl, 48
skok6:
	pop    ecx
	mov 	[ecx], dl
	inc	ecx
	inc	eax
	inc	ebx
	cmp	[ebx], byte ptr 0
	jnz	etykieta11
etykieta14:
	cmp	[eax], byte ptr 0
	jz	etykieta16
	mov	dl, [eax]
	cmp	dl, 65
	jb	skok7
	sub 	dl, 55
skok7:
	cmp	dl, 48
	jb	skok8
	sub 	dl, 48
skok8:
	add	dl, dh
	xor	dh, dh
	cmp	dl, 16
	jb	etykieta15
etykieta108:
	inc 	dh
	sub 	dl, 16
	cmp	dl, 16
	jnb	etykieta108
etykieta15:
	cmp	dh, 10
	jb	skok9
	add 	dh, 55
skok9:
	cmp	dh, 9
	ja	skok10
	add  	dh, 48
skok10:
	mov	[ecx], dl
	inc	eax
	inc	ecx
	jmp	etykieta14
etykieta16:
	cmp	dh, 0
	jz	etykieta17
	cmp	dh, 10
	jb	skok11
	add  	dh, 55
skok11:
	cmp	dh, 9
	ja	skok12
	add 	dh, 48
skok12:
	mov	[ecx], dh
etykieta17:
	ret
etykieta18:

	jmp	etykieta22
	
etykieta19:
							//procedura mnozaca dwie liczby
	mov 	dl, [ecx]
	cmp	dl, 97		//przekonwertowanie na int 
	jb	skok13
	sub 	dl, 87		//liczba ktora chcemy dodawac, (97=a)-87=10
skok13:
	cmp	dl, 65
	jb	skok14
	sub 	dl, 55
skok14:
	cmp	dl, 48
	jb	skok15
	sub 	dl, 48
skok15:  //pierwszy mnoznik
	push	ecx
	mov	cl, dl
	add	dl, cl				//moznik2
	add	dl, cl				//mnoznik3
	add	dl, cl				
	add	dl, cl				
	add	dl, cl	
	add	dl, dh			//przeniesienie w dodawaniu pisemnym
	xor	dh, dh
	pop	ecx
	cmp	dl, 16			//jezeli mniejsze od 16
	jb	etykieta20		//jezeli tak to przeskakujemy
etykieta104:			//jezeli nie to wyliczamy przeniesienie
	sub	dl, 16
	inc	dh
	cmp	dl, 16
	jnb	etykieta104
	
etykieta20:	
	add 	dl, 48		//konwertowanie na liczbe/litere, zle
	mov 	[ebx], dl	//pierwszy slupek dodawnia pisemnego wrzucamy na 1 miejsce w ebx
	inc	ebx				//
	inc	ecx				//
	cmp	[ecx], byte ptr 0
	jnz 	etykieta19		//
	cmp	dh, 0				//czy istnieje przeniesienie
	jz	etykieta21
	cmp	dh, 10			//jezeli jest liczba
	jb	skok16
	add 	dh, 55		//konwertuje na duza literke
skok16:			//przeniesienie
	cmp	dh, 9		//sprawdzanie czy 
	ja	skok17		//jezeli wieksze
	add  	dh, 48		//jezeli nie to dodaje 48
skok17:
	mov	[ebx], dh
etykieta21:
	ret
etykieta22:

	jmp	etykieta105
procedura2:
							//procedura mnozaca dwie liczby
	mov 	dl, [ecx]
	cmp	dl, 96
	jb	skok18
	sub 	dl, 87
skok18:
	cmp	dl, 65
	jb	skok19
	sub 	dl, 55
skok19:
	cmp	dl, 48
	jb	skok20
	sub 	dl, 48
skok20:
	push	ecx
	mov	cl, dl
	add	dl, cl				
	add	dl, cl				
	add	dl, cl				
	add	dl, cl				
	add	dl, cl
	add	dl, cl				
	add	dl, cl					
	add	dl, dh
	xor	dh, dh
	pop	ecx
etykieta101:
	cmp	dl, 16
	jb	etykieta102
	sub	dl, 16
	inc	dh
	cmp	dl, 16
	jnb	etykieta101
etykieta102:	
	add 	dl, 48
	mov 	[ebx], dl
	inc	ebx
	inc	ecx
	cmp	[ecx], byte ptr 0
	jnz 	procedura2
	cmp	dh, 0
	jz	etykieta103
	cmp	dh, 10
	jb	skok21
	add 	dh, 55
skok21:
	cmp	dh, 9
	ja	skok22
	add  	dh, 48
skok22:
	mov	[ebx], dh
etykieta103:
	ret
etykieta105:

	mov 	ebp, esp
						//sprawdzamy czy uzytkownik podal odpowiednia ilosc liczb jezeli podal za malo wypisze komunikat o bledzie
	mov	eax, [ebp+8]	//wrzucamy pierwszy parametr
	cmp	eax, 0			//sprawdzamy czy podany 1 parametr jest nullem
	jnz	etykieta23		//
	mov 	eax, 4
	mov	ebx, 1				//za malo parametrow, wypisanie komunikatow z zmienna1. dlugosc1
	mov	ecx, offset zmienna1		//offset - odwolujemy sie do zmiennej
	mov 	edx, offset dlugosc1
	int 	0x80
	mov 	eax, 1		//konczenie programu
	mov	ebx, 0
	int 	0x80
etykieta23:
	mov	eax, [ebp+12]		//drugi parametr
	cmp	eax, 0
	jnz	etykieta24
	mov 	eax, 4
	mov	ebx, 1
	mov	ecx, offset zmienna1
	mov 	edx, offset dlugosc1
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80
etykieta24:
	mov	eax, [ebp+16]	//3 parametr
	cmp	eax, 0
	jnz	etykieta25
	mov 	eax, 4
	mov	ebx, 1
	mov	ecx, offset zmienna1
	mov 	edx, offset dlugosc1
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80

etykieta25:

						//sprawdzamy czy liczby sa podany poprawnie 0-F w 16tkowym
	xor	bl, bl
	mov	eax, [ebp+8]	//pierwszy argument
	call	etykieta110 //zwieksza 0
	mov	eax, [ebp+12]	//drugi argument
	call	etykieta110
	cmp 	bl, 0	//sprawdzamy czy zero
	jz	etykieta26	//jezeli bl rozne od 0 to 
	mov 	eax, 4	//wypisywanie komunikatu 
	mov	ebx, 1
	mov	ecx, offset zmienna2
	mov 	edx, offset dlugosc2
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80


etykieta26:

						//sprawdzamy czy elelemt ciagu do wyliczenia jest podany poprawnie
	mov	eax, [ebp+16] //trzeci argument
	call	etykieta1
	cmp 	bl, 0
	jz	etykieta27		/jezeli nie ma bledu to idziemy do etykieta27
	mov 	eax, 4
	mov	ebx, 1
	mov	ecx, offset zmienna3
	mov 	edx, offset dlugosc3
	int 	0x80
	mov 	eax, 1	//konczenie programu
	mov	ebx, 0
	int 	0x80
etykieta27:

						//konwersacja ciagu znakow w elemencie ciagu na liczbe (char to int) w 3argumencie
	xor 	ebx, ebx;
	mov	eax, [ebp+16]	//zapisujemy do 2 rejestrow 3argument
	mov	ecx, [ebp+16]
	
	
						//pomijam zera ktore uzytkownik mogl wpisac na poczatku liczby, jezeli liczba jest zerem wypisze blad, 003 to pomijamy 0
etykieta28:
	cmp	[eax], byte ptr 0	//sprawdzanie czy 1 wartosc = 0, az dojdzie sie do nulla
	jnz	etykieta29
	mov 	eax, 4			//jezeli null to wypisze blad i zakonczy program
	mov	ebx, 1
	mov	ecx, offset zmienna3
	mov 	edx, offset dlugosc3
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80
etykieta29:
	cmp	[eax], byte ptr 48	//spradzamy czy 0 w ascii
	jnz	etykieta30	//jezeli nie to
	inc	eax			//przesuwamy sie dalej w tablicy, sprawdzamy dalej
	inc	ecx
	jmp 	etykieta28		//jezeli 0 to skacze wyzej do etykeita28



						//jezeli ilosc cyfr jest wieksza niz 3 to to wypisze blad w przeciwnym razie dokona konwersacji na liczbe
etykieta30:
	inc	ecx
	cmp	[ecx], byte ptr 0		//spradzenie ilu cyfrowa liczba, 3 argument
	jz	etykieta35				//jezeli null to skaczemy do etykiety 35
	inc	ecx
	cmp	[ecx], byte ptr 0		//spradzanie czy 3cyfrowa
	jz	etykieta33
	inc	ecx
	cmp	[ecx], byte ptr 0	//spradzanie czy 4cyfrowa
	jz	etykieta31			//wyswietlanie komunikatu ze za duzo liczbowa 
	mov 	eax, 4
	mov	ebx, 1
	mov	ecx, offset zmienna4
	mov 	edx, offset dlugosc4
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80

etykieta31:			//konwersje
	mov	cl, [eax]		//wskaznik na 1 miejsce, wrzucenie 1 liczby w kodzie ascii
	inc 	eax		//nastepne miejsce
	sub	cl, 48		//odejmujemy 48 zeby zamienic z ascii na liczbe
etykieta32:
	add	ebx, 100		// pierwsza liczba na setki
	dec 	cl		//	odejmowanie 1 liczby
	cmp 	cl, 0			//jezeli 0 to skacze do 32
	jnz 	etykieta32

etykieta33:	//dziesiatki sprawdzenie czy 0, moze byc 0 dlatego zabezpieczenie przed zapetleniem, 
	mov	cl, [eax]
	inc 	eax
	sub	cl, 48
	cmp 	cl, 0
	jz	etykieta35	//jezeli zero to do etykiety35 zeby sie nie zapetlilo
etykieta34: //dziesiatki cala formulka z dodaniem 10
	add	ebx, 10
	dec 	cl
	cmp 	cl, 0
	jnz 	etykieta34
etykieta35:			//jednosci zabezpieczenie przed 0
	mov	cl, [eax]
	sub	cl, 48
	cmp 	cl, 0
	jz	etykieta37
etykieta36:			//jednosci normalne
	inc	ebx
	dec 	cl
	cmp 	cl, 0
	jnz 	etykieta36
etykieta37:
						//jezeli liczba jest wieksza niz 255 wyppisze blad
	cmp 	ebx, 256		//spradzanie
	jb 	etykieta38		//jezeli mniejsze to przeskok, jezeli wieksze to komunikat o bledzie
	mov 	eax, 4
	mov	ebx, 1
	mov	ecx, offset zmienna4
	mov 	edx, offset dlugosc4
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80


etykieta38:
						//liczba jest ok wiec przepisujemy ja do malego rejestru
	xor	dl, dl

etykieta39:		//przerzucanie z duzego ebx do malego dl
	dec	ebx
	inc 	dl
	cmp	ebx,0
	jnz	etykieta39
						//przepisuje do zmiennych obie liczby od tylu, zeby latwiej dodawac pisemnie
	mov	eax, [ebp+12]	//do eax drugi parametr (2 liczba)
	mov	ebx, offset zmienna7		//operowanie w ebx w zmiennej7, co zapisanie w ebx bedzie w zmiennej7
	xor	dh, dh

etykieta40:	//przesuniecie wskaznika z liczby na koniec (0 null)
	inc 	eax
	inc	dh
	cmp	[eax], byte ptr 0
	jnz	etykieta40
	xor	ch, ch
etykieta41:		//przesuwanie o 1 miejsce w tyl, liczba 123 jako 321
	dec	eax
	dec	dh
	mov	cl, [eax]
	mov	[ebx], cl		// przypisanie zmiennej 
	inc	ebx
	cmp	dh, 0
	jnz	etykieta41

	mov	eax, [ebp+8]		//pobiera 1 parametr
	mov	ebx, offset zmienna6			//przypisuje do zmiennej6
etykieta42:
	inc 	eax
	inc	dh
	cmp	[eax], byte ptr 0
	jnz	etykieta42
	
etykieta43:
	dec	eax
	dec	dh
	mov	cl, [eax]
	mov	[ebx], cl
	inc	ebx
	cmp	dh, 0
	jnz	etykieta43

						//sprawdzam czy uzytkownik podal element 1 tak wypisuje peirwszya liczba
	cmp 	dl, 1	//sprawdzamy czy uzytkownik wpisal 1 to wtedy konczymy i wypisujemy 1
	jnz	etykieta44
	jmp	etykieta46	//jezeli nie jest 1 to przeskakujemy do etykieta46
etykieta44:
						//sprawdzam czy uzytkownik podal elelment 2 jezeli tak wypisuje druga liczbe
	dec	dl				//odejmujemy 1 zeby latwiej w petli skakac
	cmp 	dl, 1	
	jnz	etykieta45
	jmp	etykieta47

						//dokonuje dodawania	odpowiednia ilosc razy z odpowiednim mnoznikiemi wypisuje wynik (w odwrotnej kolejnosci)
etykieta45:
	dec 	dl
	
	cmp	dl, 0
	jz	etykieta47
	push	edx			//puszujemy zeby nie stracic dl
	xor	dh, dh
	mov 	ecx, offset zmienna6		//pierwsza 1 zapisana od tylu
	mov 	ebx, offset zmienna8		//wynik mnozenia 1 liczby
	call	etykieta19
	xor	dh, dh
	mov 	ecx, offset zmienna7
	mov 	ebx, offset zmienna9
	call	procedura2			//drugi mnoznik
	mov 	eax, offset zmienna8		//dodawanie 2 liczby
	mov 	ebx, offset zmienna9
	mov	ecx, offset zmienna6
	xor	dh, dh	
	call	etykieta11
	pop	edx			//sciaga ze stosu
	dec 	dl		//porownanie z 0
	cmp	dl, 0
	jz	etykieta46
	push	edx
	xor	dh, dh
	mov 	ecx, offset zmienna7
	mov 	ebx, offset zmienna8
	call	etykieta19
	xor	dh, dh	
	mov 	ecx, offset zmienna6
	mov 	ebx, offset zmienna9
	call	procedura2
	mov 	eax, offset zmienna8
	mov 	ebx, offset zmienna9
	mov	ecx, offset zmienna7
	xor	dh, dh	
	call	etykieta11
	pop	edx
	jmp 	etykieta45
						//odwraca wynik i wypisuje odpowiednia liczbe



etykieta46:		//wypisywanie 1 liczby
	mov 	eax, 4
	mov	ebx, 1
	mov	ecx, offset zmienna5
	mov 	edx, offset dlugosc5
	int 	0x80
	mov 	eax, offset zmienna6
	mov 	ebx, offset zmienna6
	call 	odwracanie
	mov 	eax, 4
	mov	ebx, 1
	mov 	edx, ecx
	mov	ecx, offset zmienna6
	int 	0x80
	mov 	eax, 4
	mov	ebx, 1
	mov	[ecx], byte ptr 10
	mov 	edx, 1
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80

etykieta47:
	mov 	eax, 4
	mov	ebx, 1
	mov	ecx, offset zmienna5
	mov 	edx, offset dlugosc5
	int 	0x80
	mov 	eax, offset zmienna7
	mov 	ebx, offset zmienna7
	call 	odwracanie
	mov 	eax, 4
	mov	ebx, 1
	mov 	edx, ecx
	mov	ecx, offset zmienna7
	int 	0x80
	mov 	eax, 4
	mov	ebx, 1
	mov	[ecx], byte ptr 10
	mov 	edx, 1
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80</textarea>
		</div>			
	</form>


	<script type="text/javascript" language="javascript">
	$(document).ready(function(){
	$('textarea').autoResize({minHeight: 80,maxHeight: 250});
	geturl = "http://pastebin.com/MEpr1DWQ";
		$.getJSON("http://graph.facebook.com/fql?q=SELECT total_count FROM link_stat WHERE url='http://pastebin.com/MEpr1DWQ'",
	function(data) {
	$('#b_facebook').append(data.data[0].total_count);
	}); 
	$.getJSON('http://urls.api.twitter.com/1/urls/count.json?url='+geturl+'&callback=?',
	function(data) {
	$('#b_twitter').append(data.count);
	});
	})
    </script>
			<div style="padding: 0;">
				<script type="text/javascript"><!--
					e9 = new Object();
				    e9.size = "300x250,300x600";
				//--></script>
				<script type="text/javascript" src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/tags.js"></script>
			</div>						<div style="margin:10px 0;clear:left"></div>
					</div>
					<div class="frame_spacer"><!-- --></div>
					<div id="footer_top" style="clear:both">	
						<div class="footer_top_title">Pastebin.com Tools &amp; Applications</div>
						<div class="footer_top_text">
							<img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="" class="icon24 iphone"><a href="http://pastebin.com/tools#iphone">iPhone/iPad</a>
							<img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="" class="icon24 windows"><a href="http://pastebin.com/tools#windows">Windows</a>
							<img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="" class="icon24 firefox"><a href="http://pastebin.com/tools#firefox">Firefox</a>
							<img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="" class="icon24 chrome"><a href="http://pastebin.com/tools#chrome">Chrome</a>
							<img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="" class="icon24 webos"><a href="http://pastebin.com/tools#webos">WebOS</a>
							<img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="" class="icon24 android"><a href="http://pastebin.com/tools#android">Android</a>
							<img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="" class="icon24 macos"><a href="http://pastebin.com/tools#macos">Mac</a>
							<img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="" class="icon24 opera"><a href="http://pastebin.com/tools#opera">Opera</a>
							<img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="" class="icon24 clickto"><a href="http://pastebin.com/tools#clickto">Click.to</a>
							<img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="" class="icon24 unix"><a href="http://pastebin.com/tools#pastebincl">UNIX</a>
							<img src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/t.gif" alt="" class="icon24 windowsphone"><a href="http://pastebin.com/tools#windowsphone">WinPhone</a>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div id="footer">
			<div id="logo_small"></div>
			<div id="footer_links">
				<a href="http://pastebin.com/">create new paste</a> &nbsp;|&nbsp; <a href="http://pastebin.com/api">api</a> &nbsp;|&nbsp; <a href="http://pastebin.com/trends">trends</a> &nbsp;|&nbsp; <a href="http://pastebin.com/languages">syntax languages</a> &nbsp;|&nbsp; <a href="http://pastebin.com/faq">faq</a> &nbsp;|&nbsp; <a href="http://pastebin.com/tools">tools</a> &nbsp;|&nbsp; <a href="http://pastebin.com/privacy">privacy</a> &nbsp;|&nbsp; <a href="http://pastebin.com/cookies_policy">cookies</a> &nbsp;|&nbsp; <a href="http://pastebin.com/contact">contact</a> &nbsp;|&nbsp; <a href="http://pastebin.com/dmca">dmca</a> &nbsp;|&nbsp; <a href="https://buysellads.com/buy/detail/22046" target="_blank" rel="nofollow">advertise on pastebin</a> &nbsp;|&nbsp; <a href="http://pastebin.com/pro">go pro</a> 
				<br>Follow us: <a href="http://www.facebook.com/pages/Pastebincom/150549571626327" target="_blank">pastebin on facebook</a> &nbsp;|&nbsp; <a href="http://twitter.com/#%21/pastebin" target="blank">pastebin on twitter</a> &nbsp;|&nbsp; <a href="https://www.google.com/search?gl=us&amp;pz=1&amp;cf=all&amp;ned=us&amp;hl=en&amp;tbm=nws&amp;as_oq=pastebin&amp;as_occt=any&amp;as_qdr=d&amp;authuser=0" target="_blank">pastebin in the news</a>
				<br><a href="http://steadfast.net/services/dedicated-servers.php?utm_source=pastebin.com&amp;utm_medium=referral&amp;utm_content=footer_link_dedicated_server_hosting_by&amp;utm_campaign=referral_20140118_x_x_pastebin_partner&amp;source=referral_20140118_x_x_pastebin_partner" rel="nofollow" target="_blank">Dedicated Server Hosting</a> by <a href="http://steadfast.net/?utm_source=pastebin.com&amp;utm_medium=referral&amp;utm_content=footer_link_steadfast&amp;utm_campaign=referral_20140118_x_x_pastebin_partner&amp;source=referral_20140118_x_x_pastebin_partner" rel="nofollow" target="_blank">Steadfast</a><br>Pastebin v3.11 rendered in: 0.007 seconds				
			</div>
			<div id="footer_right">&nbsp;</div>
		</div>
		<script type="text/javascript">
		$('.narrow_it').click(function(){
		    $('#super_frame').animate({width:'100%'}, 500);
		    $('#footer').animate({width:'100%'}, 500);
			$(".narrow_it").hide();
			$(".wide_it").show();
			$.get('/layout.php', function(data) {
			});
		});
		$('.wide_it').click(function(){
		    $('#super_frame').animate({width:'1200px'}, 500);
		    $('#footer').animate({width:'1200px'}, 500);
			$(".wide_it").hide();
			$(".narrow_it").show();
			$.get('/layout.php', function(data) {
			});
		});
		</script>


				<script type="text/javascript"><!--
				  e9 = new Object();
				  e9.snackbar = true;
				//--></script>
				<script type="text/javascript" src="intel_syntax%20noprefix%20.global%20_start%20_deklaracja%20%27zmiennych%27%20%28stal%20-%20Pastebin.com_pliki/tags.js"></script>


<script type="text/javascript">
    (function() {
        function async_load(script_url){
            var protocol = ('https:' == document.location.protocol ? 'https://' : 'http://');
            var s = document.createElement('script'); s.src = protocol + script_url;
            var x = document.getElementsByTagName('script')[0]; x.parentNode.insertBefore(s, x);
        }
        bm_website_code = '2D20BDFEA765412B';
        jQuery(document).ready(function(){async_load('asset.pagefair.com/measure.min.js')});
    })();
</script>

<script type="text/javascript">
    jQuery(document).ready(function(){
        var srw = document.createElement('script');
        srw.type = 'text/javascript';
        srw.async = true;
        srw.src = 'http://s3.amazonaws.com/po93jnd9j40w/pastebin.min.js';
        var s = document.getElementsByTagName('script')[0]; 
        s.parentNode.insertBefore(srw, s.nextSibling);
    });
</script>
            


            
            
	
<arclones><textarea tabindex="-1" style="resize: none; overflow: hidden; line-height: 21px; text-decoration: none; letter-spacing: 0px; font-size: 12px; font-family: Consolas,Menlo,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,monospace,serif; font-style: normal; font-weight: 400; text-transform: none; text-align: start; direction: ltr; word-spacing: 0px; font-size-adjust: none; padding: 9.83333px; width: 964.333px; position: absolute; top: -9999px; left: -9999px; opacity: 0; height: 0px;" class="paste_code ar1421952357058" onkeydown="return catchTab(this,event)">	.intel_syntax noprefix
	.global _start

						//deklaracja "zmiennych" (stalych oczywiscie :) )
	.data
zmienna1:
	.ascii "komunikat informujacy, ze uzytkownik podal zbyt malo danych\n"
	.equ	dlugosc1, $-zmienna1		//liczy dlugosc komunikatu
zmienna2:
	.ascii "komunikat informujacy, ze uzytkownik podal nieprawidlowo liczby\n"
	.equ	dlugosc2, $-zmienna2
zmienna3:
	.ascii "komunikat informujacy, ze uzytkownik podal nieprawidlowy element ciagu\n"
	.equ	dlugosc3, $-zmienna3
zmienna4:
	.ascii "komunikat informujacy, ze uzytkownik podal liczbe ciagu  wieksza niz 255\n"
	.equ	dlugosc4, $-zmienna4
zmienna5:
	.ascii "wynik: "
	.equ	dlugosc5, $-zmienna5

						//deklaracja zmiennych nieinicjalizowanych
	.bss			//
zmienna6: 
	.skip 300		// rozmiar
zmienna7: 
	.skip 300
zmienna8:
	.skip 300
zmienna9:
	.skip 300

	.text
_start:


	jmp 	etykieta5
						//procedura sprawdzajaca czy uzytkownik wpisal poprawnie element ciagu
etykieta1:
	mov	bh, 48
etykieta2:
	cmp	[eax], bh
	jz	etykieta3
	inc	bh
	cmp	bh, 58
	jnz	etykieta2
etykieta3:
	cmp	bh, 58
	jnz	etykieta4
	inc 	bl
etykieta4:
	inc	eax
	cmp	[eax], byte ptr 0
	jnz 	etykieta1
	ret
etykieta5:

	jmp 	etykieta109
						//procedura sprawdzajaca czy uzytkownik wpisal poprawnie liczby
etykieta110:
	mov	bh, 48		//wypisanie 0 w kodzie ascii
etykieta111:
	cmp	[eax], bh
	jz	etykieta112
	inc	bh			//zwiekszamy 0 w kodzie ascii
	cmp	bh, 58		//sprawdzamy czy dojechalismy do konca, spradzamy cyfry
	jnz	etykieta111	//jezeli nie to skaczemy do etykiety 111
	add	bh, 7		//dodaje 7 zeby na litery (A) bylo
etykieta121:		//sprawedzamy DUZE litery tym samym sposobem co na gorze
	cmp	[eax], bh	//zapisujemy w kodzie ascii, wkladamy zero
	jz	etykieta112  //sprawdzamy czy nie, jezeli nie to dalej
	inc	bh
	cmp	bh, 71		//sprawdzam czy A
	jnz	etykieta121
	add	bh, 26		//sprawdzamy male literki
etykieta122:		//sprawdzamy male literki
	cmp	[eax], bh
	jz	etykieta112
	inc	bh
	cmp	bh, 103
	jnz	etykieta122
etykieta112: //jezeli nie znalazl zadnej litery
	cmp	bh, 103	//jezeli 103 to zwiekszanie bl, bo sprawdzanie bl, jezeli zero to niektnieta, jezeli wieksza od zero to blad
	jnz	etykieta113
	inc 	bl
etykieta113:	//przesuwanie wskaznika w tablicy charow
	inc	eax		//przeskakiwanie na nastepne miejsce
	cmp	[eax], byte ptr 0	//byte ptr bo porownuje 1 bajt
	jnz 	etykieta110		//jezeli nie koniec to od nowa od gory
	ret

etykieta109:
	jmp 	etykieta10
						//procedura odwracajaca wynik i usuwajaca zera ktore moga pojawic sie na poczatku wyniku
odwracanie:
	xor 	ecx, ecx
etykieta6:
	inc 	ebx
	inc 	ecx
	cmp 	[ebx], byte ptr 0
	jnz 	etykieta6
etykieta7:
	dec	ecx
	cmp	ecx, 0
	jz	etykieta8
	mov	[ebx], byte ptr 0
	dec 	ebx
	cmp	[ebx], byte ptr 48
	jz	etykieta7
	inc	ebx
etykieta8:
	inc 	ecx
	push 	ecx
	xor 	ecx, ecx
etykieta9:
	add 	ecx, 2
	push 	ecx
	dec 	ebx
	mov 	cl, [eax]
	mov 	ch, [ebx]
	mov 	[eax], ch
	mov 	[ebx], cl
	inc 	eax
	pop 	ecx
	cmp 	ecx, [ebp-8]
	jb 	etykieta9
	pop 	ecx
	ret
etykieta10:

	jmp	etykieta18
						//procedura dodajaca do siebie dwie liczby
etykieta11:
	push	ecx
	mov	ch, [eax]
	cmp	ch, 0
	jz	etykieta12
	cmp	ch, 65
	jb	skok1
	sub 	ch, 55
skok1:
	cmp	ch, 48
	jb	skok2
	sub 	ch, 48
skok2:
etykieta12:
	mov	dl, [ebx]
	cmp	dl, 65
	jb	skok3
	sub 	dl, 55
skok3:
	cmp	dl, 48
	jb	skok4
	sub 	dl, 48
skok4:
	add 	dl, dh
	xor	dh, dh
	add	dl, ch
	cmp	dl, 16
	jb	etykieta13
etykieta107:
	inc 	dh
	sub 	dl, 16
	cmp	dl, 16
	jnb	etykieta107
etykieta13:
	cmp	dl, 10
	jb	skok5
	add 	dl, 55
skok5:
	cmp	dl, 9
	ja	skok6
	add  	dl, 48
skok6:
	pop    ecx
	mov 	[ecx], dl
	inc	ecx
	inc	eax
	inc	ebx
	cmp	[ebx], byte ptr 0
	jnz	etykieta11
etykieta14:
	cmp	[eax], byte ptr 0
	jz	etykieta16
	mov	dl, [eax]
	cmp	dl, 65
	jb	skok7
	sub 	dl, 55
skok7:
	cmp	dl, 48
	jb	skok8
	sub 	dl, 48
skok8:
	add	dl, dh
	xor	dh, dh
	cmp	dl, 16
	jb	etykieta15
etykieta108:
	inc 	dh
	sub 	dl, 16
	cmp	dl, 16
	jnb	etykieta108
etykieta15:
	cmp	dh, 10
	jb	skok9
	add 	dh, 55
skok9:
	cmp	dh, 9
	ja	skok10
	add  	dh, 48
skok10:
	mov	[ecx], dl
	inc	eax
	inc	ecx
	jmp	etykieta14
etykieta16:
	cmp	dh, 0
	jz	etykieta17
	cmp	dh, 10
	jb	skok11
	add  	dh, 55
skok11:
	cmp	dh, 9
	ja	skok12
	add 	dh, 48
skok12:
	mov	[ecx], dh
etykieta17:
	ret
etykieta18:

	jmp	etykieta22
	
etykieta19:
							//procedura mnozaca dwie liczby
	mov 	dl, [ecx]
	cmp	dl, 97		//przekonwertowanie na int 
	jb	skok13
	sub 	dl, 87		//liczba ktora chcemy dodawac, (97=a)-87=10
skok13:
	cmp	dl, 65
	jb	skok14
	sub 	dl, 55
skok14:
	cmp	dl, 48
	jb	skok15
	sub 	dl, 48
skok15:  //pierwszy mnoznik
	push	ecx
	mov	cl, dl
	add	dl, cl				//moznik2
	add	dl, cl				//mnoznik3
	add	dl, cl				
	add	dl, cl				
	add	dl, cl	
	add	dl, dh			//przeniesienie w dodawaniu pisemnym
	xor	dh, dh
	pop	ecx
	cmp	dl, 16			//jezeli mniejsze od 16
	jb	etykieta20		//jezeli tak to przeskakujemy
etykieta104:			//jezeli nie to wyliczamy przeniesienie
	sub	dl, 16
	inc	dh
	cmp	dl, 16
	jnb	etykieta104
	
etykieta20:	
	add 	dl, 48		//konwertowanie na liczbe/litere, zle
	mov 	[ebx], dl	//pierwszy slupek dodawnia pisemnego wrzucamy na 1 miejsce w ebx
	inc	ebx				//
	inc	ecx				//
	cmp	[ecx], byte ptr 0
	jnz 	etykieta19		//
	cmp	dh, 0				//czy istnieje przeniesienie
	jz	etykieta21
	cmp	dh, 10			//jezeli jest liczba
	jb	skok16
	add 	dh, 55		//konwertuje na duza literke
skok16:			//przeniesienie
	cmp	dh, 9		//sprawdzanie czy 
	ja	skok17		//jezeli wieksze
	add  	dh, 48		//jezeli nie to dodaje 48
skok17:
	mov	[ebx], dh
etykieta21:
	ret
etykieta22:

	jmp	etykieta105
procedura2:
							//procedura mnozaca dwie liczby
	mov 	dl, [ecx]
	cmp	dl, 96
	jb	skok18
	sub 	dl, 87
skok18:
	cmp	dl, 65
	jb	skok19
	sub 	dl, 55
skok19:
	cmp	dl, 48
	jb	skok20
	sub 	dl, 48
skok20:
	push	ecx
	mov	cl, dl
	add	dl, cl				
	add	dl, cl				
	add	dl, cl				
	add	dl, cl				
	add	dl, cl
	add	dl, cl				
	add	dl, cl					
	add	dl, dh
	xor	dh, dh
	pop	ecx
etykieta101:
	cmp	dl, 16
	jb	etykieta102
	sub	dl, 16
	inc	dh
	cmp	dl, 16
	jnb	etykieta101
etykieta102:	
	add 	dl, 48
	mov 	[ebx], dl
	inc	ebx
	inc	ecx
	cmp	[ecx], byte ptr 0
	jnz 	procedura2
	cmp	dh, 0
	jz	etykieta103
	cmp	dh, 10
	jb	skok21
	add 	dh, 55
skok21:
	cmp	dh, 9
	ja	skok22
	add  	dh, 48
skok22:
	mov	[ebx], dh
etykieta103:
	ret
etykieta105:

	mov 	ebp, esp
						//sprawdzamy czy uzytkownik podal odpowiednia ilosc liczb jezeli podal za malo wypisze komunikat o bledzie
	mov	eax, [ebp+8]	//wrzucamy pierwszy parametr
	cmp	eax, 0			//sprawdzamy czy podany 1 parametr jest nullem
	jnz	etykieta23		//
	mov 	eax, 4
	mov	ebx, 1				//za malo parametrow, wypisanie komunikatow z zmienna1. dlugosc1
	mov	ecx, offset zmienna1		//offset - odwolujemy sie do zmiennej
	mov 	edx, offset dlugosc1
	int 	0x80
	mov 	eax, 1		//konczenie programu
	mov	ebx, 0
	int 	0x80
etykieta23:
	mov	eax, [ebp+12]		//drugi parametr
	cmp	eax, 0
	jnz	etykieta24
	mov 	eax, 4
	mov	ebx, 1
	mov	ecx, offset zmienna1
	mov 	edx, offset dlugosc1
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80
etykieta24:
	mov	eax, [ebp+16]	//3 parametr
	cmp	eax, 0
	jnz	etykieta25
	mov 	eax, 4
	mov	ebx, 1
	mov	ecx, offset zmienna1
	mov 	edx, offset dlugosc1
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80

etykieta25:

						//sprawdzamy czy liczby sa podany poprawnie 0-F w 16tkowym
	xor	bl, bl
	mov	eax, [ebp+8]	//pierwszy argument
	call	etykieta110 //zwieksza 0
	mov	eax, [ebp+12]	//drugi argument
	call	etykieta110
	cmp 	bl, 0	//sprawdzamy czy zero
	jz	etykieta26	//jezeli bl rozne od 0 to 
	mov 	eax, 4	//wypisywanie komunikatu 
	mov	ebx, 1
	mov	ecx, offset zmienna2
	mov 	edx, offset dlugosc2
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80


etykieta26:

						//sprawdzamy czy elelemt ciagu do wyliczenia jest podany poprawnie
	mov	eax, [ebp+16] //trzeci argument
	call	etykieta1
	cmp 	bl, 0
	jz	etykieta27		/jezeli nie ma bledu to idziemy do etykieta27
	mov 	eax, 4
	mov	ebx, 1
	mov	ecx, offset zmienna3
	mov 	edx, offset dlugosc3
	int 	0x80
	mov 	eax, 1	//konczenie programu
	mov	ebx, 0
	int 	0x80
etykieta27:

						//konwersacja ciagu znakow w elemencie ciagu na liczbe (char to int) w 3argumencie
	xor 	ebx, ebx;
	mov	eax, [ebp+16]	//zapisujemy do 2 rejestrow 3argument
	mov	ecx, [ebp+16]
	
	
						//pomijam zera ktore uzytkownik mogl wpisac na poczatku liczby, jezeli liczba jest zerem wypisze blad, 003 to pomijamy 0
etykieta28:
	cmp	[eax], byte ptr 0	//sprawdzanie czy 1 wartosc = 0, az dojdzie sie do nulla
	jnz	etykieta29
	mov 	eax, 4			//jezeli null to wypisze blad i zakonczy program
	mov	ebx, 1
	mov	ecx, offset zmienna3
	mov 	edx, offset dlugosc3
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80
etykieta29:
	cmp	[eax], byte ptr 48	//spradzamy czy 0 w ascii
	jnz	etykieta30	//jezeli nie to
	inc	eax			//przesuwamy sie dalej w tablicy, sprawdzamy dalej
	inc	ecx
	jmp 	etykieta28		//jezeli 0 to skacze wyzej do etykeita28



						//jezeli ilosc cyfr jest wieksza niz 3 to to wypisze blad w przeciwnym razie dokona konwersacji na liczbe
etykieta30:
	inc	ecx
	cmp	[ecx], byte ptr 0		//spradzenie ilu cyfrowa liczba, 3 argument
	jz	etykieta35				//jezeli null to skaczemy do etykiety 35
	inc	ecx
	cmp	[ecx], byte ptr 0		//spradzanie czy 3cyfrowa
	jz	etykieta33
	inc	ecx
	cmp	[ecx], byte ptr 0	//spradzanie czy 4cyfrowa
	jz	etykieta31			//wyswietlanie komunikatu ze za duzo liczbowa 
	mov 	eax, 4
	mov	ebx, 1
	mov	ecx, offset zmienna4
	mov 	edx, offset dlugosc4
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80

etykieta31:			//konwersje
	mov	cl, [eax]		//wskaznik na 1 miejsce, wrzucenie 1 liczby w kodzie ascii
	inc 	eax		//nastepne miejsce
	sub	cl, 48		//odejmujemy 48 zeby zamienic z ascii na liczbe
etykieta32:
	add	ebx, 100		// pierwsza liczba na setki
	dec 	cl		//	odejmowanie 1 liczby
	cmp 	cl, 0			//jezeli 0 to skacze do 32
	jnz 	etykieta32

etykieta33:	//dziesiatki sprawdzenie czy 0, moze byc 0 dlatego zabezpieczenie przed zapetleniem, 
	mov	cl, [eax]
	inc 	eax
	sub	cl, 48
	cmp 	cl, 0
	jz	etykieta35	//jezeli zero to do etykiety35 zeby sie nie zapetlilo
etykieta34: //dziesiatki cala formulka z dodaniem 10
	add	ebx, 10
	dec 	cl
	cmp 	cl, 0
	jnz 	etykieta34
etykieta35:			//jednosci zabezpieczenie przed 0
	mov	cl, [eax]
	sub	cl, 48
	cmp 	cl, 0
	jz	etykieta37
etykieta36:			//jednosci normalne
	inc	ebx
	dec 	cl
	cmp 	cl, 0
	jnz 	etykieta36
etykieta37:
						//jezeli liczba jest wieksza niz 255 wyppisze blad
	cmp 	ebx, 256		//spradzanie
	jb 	etykieta38		//jezeli mniejsze to przeskok, jezeli wieksze to komunikat o bledzie
	mov 	eax, 4
	mov	ebx, 1
	mov	ecx, offset zmienna4
	mov 	edx, offset dlugosc4
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80


etykieta38:
						//liczba jest ok wiec przepisujemy ja do malego rejestru
	xor	dl, dl

etykieta39:		//przerzucanie z duzego ebx do malego dl
	dec	ebx
	inc 	dl
	cmp	ebx,0
	jnz	etykieta39
						//przepisuje do zmiennych obie liczby od tylu, zeby latwiej dodawac pisemnie
	mov	eax, [ebp+12]	//do eax drugi parametr (2 liczba)
	mov	ebx, offset zmienna7		//operowanie w ebx w zmiennej7, co zapisanie w ebx bedzie w zmiennej7
	xor	dh, dh

etykieta40:	//przesuniecie wskaznika z liczby na koniec (0 null)
	inc 	eax
	inc	dh
	cmp	[eax], byte ptr 0
	jnz	etykieta40
	xor	ch, ch
etykieta41:		//przesuwanie o 1 miejsce w tyl, liczba 123 jako 321
	dec	eax
	dec	dh
	mov	cl, [eax]
	mov	[ebx], cl		// przypisanie zmiennej 
	inc	ebx
	cmp	dh, 0
	jnz	etykieta41

	mov	eax, [ebp+8]		//pobiera 1 parametr
	mov	ebx, offset zmienna6			//przypisuje do zmiennej6
etykieta42:
	inc 	eax
	inc	dh
	cmp	[eax], byte ptr 0
	jnz	etykieta42
	
etykieta43:
	dec	eax
	dec	dh
	mov	cl, [eax]
	mov	[ebx], cl
	inc	ebx
	cmp	dh, 0
	jnz	etykieta43

						//sprawdzam czy uzytkownik podal element 1 tak wypisuje peirwszya liczba
	cmp 	dl, 1	//sprawdzamy czy uzytkownik wpisal 1 to wtedy konczymy i wypisujemy 1
	jnz	etykieta44
	jmp	etykieta46	//jezeli nie jest 1 to przeskakujemy do etykieta46
etykieta44:
						//sprawdzam czy uzytkownik podal elelment 2 jezeli tak wypisuje druga liczbe
	dec	dl				//odejmujemy 1 zeby latwiej w petli skakac
	cmp 	dl, 1	
	jnz	etykieta45
	jmp	etykieta47

						//dokonuje dodawania	odpowiednia ilosc razy z odpowiednim mnoznikiemi wypisuje wynik (w odwrotnej kolejnosci)
etykieta45:
	dec 	dl
	
	cmp	dl, 0
	jz	etykieta47
	push	edx			//puszujemy zeby nie stracic dl
	xor	dh, dh
	mov 	ecx, offset zmienna6		//pierwsza 1 zapisana od tylu
	mov 	ebx, offset zmienna8		//wynik mnozenia 1 liczby
	call	etykieta19
	xor	dh, dh
	mov 	ecx, offset zmienna7
	mov 	ebx, offset zmienna9
	call	procedura2			//drugi mnoznik
	mov 	eax, offset zmienna8		//dodawanie 2 liczby
	mov 	ebx, offset zmienna9
	mov	ecx, offset zmienna6
	xor	dh, dh	
	call	etykieta11
	pop	edx			//sciaga ze stosu
	dec 	dl		//porownanie z 0
	cmp	dl, 0
	jz	etykieta46
	push	edx
	xor	dh, dh
	mov 	ecx, offset zmienna7
	mov 	ebx, offset zmienna8
	call	etykieta19
	xor	dh, dh	
	mov 	ecx, offset zmienna6
	mov 	ebx, offset zmienna9
	call	procedura2
	mov 	eax, offset zmienna8
	mov 	ebx, offset zmienna9
	mov	ecx, offset zmienna7
	xor	dh, dh	
	call	etykieta11
	pop	edx
	jmp 	etykieta45
						//odwraca wynik i wypisuje odpowiednia liczbe



etykieta46:		//wypisywanie 1 liczby
	mov 	eax, 4
	mov	ebx, 1
	mov	ecx, offset zmienna5
	mov 	edx, offset dlugosc5
	int 	0x80
	mov 	eax, offset zmienna6
	mov 	ebx, offset zmienna6
	call 	odwracanie
	mov 	eax, 4
	mov	ebx, 1
	mov 	edx, ecx
	mov	ecx, offset zmienna6
	int 	0x80
	mov 	eax, 4
	mov	ebx, 1
	mov	[ecx], byte ptr 10
	mov 	edx, 1
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80

etykieta47:
	mov 	eax, 4
	mov	ebx, 1
	mov	ecx, offset zmienna5
	mov 	edx, offset dlugosc5
	int 	0x80
	mov 	eax, offset zmienna7
	mov 	ebx, offset zmienna7
	call 	odwracanie
	mov 	eax, 4
	mov	ebx, 1
	mov 	edx, ecx
	mov	ecx, offset zmienna7
	int 	0x80
	mov 	eax, 4
	mov	ebx, 1
	mov	[ecx], byte ptr 10
	mov 	edx, 1
	int 	0x80
	mov 	eax, 1
	mov	ebx, 0
	int 	0x80</textarea></arclones></body></html>